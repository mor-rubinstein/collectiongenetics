% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/filter_data.R
\name{SetMarkerFilter}
\alias{SetMarkerFilter}
\title{Filtering the markers}
\usage{
SetMarkerFilter(object, Filter = NULL, print.n.markers = T,
  step_name = "marker filter")
}
\arguments{
\item{object}{\code{Genotype}. The object to be filtered.}

\item{Filter}{character, integer or logical. The markers to be filtered.
This could be a vector of marker names, marker indeces, or a logical vector
with TRUE values for markers to filter and FALSE for markers to keep.}

\item{print.n.markers}{logical. Should the number of remaining markers be
printed on the screen?}

\item{step_name}{character. The name of the filtration step. This will
in the step name column in the filter table.}
}
\value{
The filtered \code{Genotype} object. The filter table holds a new
line with the number of markers left after this step, and the
'Filtered_at_step' column in the MarkerInfo of the filtered markers, have
the step name.
}
\description{
Filter (or 'mask') a specified set of markers from a \code{Genotype} object.
Update the filter table and the marker info.
}
\examples{
data("Mango_raw")
MarkerNo(MxS)
MxS = SetMarkerFilter(MxS, Filter=c("Contig1987_1443", "Contig2006_1970",
    "mango_c15408_840"), step_name="arbitrary filtering")
getMarkerInfo(MxS, Masked=F)["Contig1987_1443", ]
}

